{"version":3,"file":"component---src-pages-index-jsx-40217e529c3b682b2838.js","mappings":"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","sources":["webpack://Dream.Code.Sleep.Repeat././src/components/Header.jsx","webpack://Dream.Code.Sleep.Repeat././src/components/Cube.jsx","webpack://Dream.Code.Sleep.Repeat././node_modules/three/examples/jsm/controls/OrbitControls.js","webpack://Dream.Code.Sleep.Repeat././src/components/FloatingBlobsBackground.jsx","webpack://Dream.Code.Sleep.Repeat././src/pages/index.jsx","webpack://Dream.Code.Sleep.Repeat././src/utils/index.js","webpack://Dream.Code.Sleep.Repeat././src/components/custom_hooks/useWindowSize.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { css, keyframes } from '@emotion/core'\n\nimport { randIdx, randInt } from '../utils'\nimport useWindowSize from './custom_hooks/useWindowSize'\n\nimport { palette } from '../styles/meta'\nimport { animations } from '../styles/shared'\n\nconst HEADER_TIMING = 2\n\nconst symbols = `!@#$%^&*()+-_=~<>,.?/{}[]|;:`\nconst words = [`Dream.`, `Code.`, ``, `Sleep.`, `Repeat.`]\n\nconst header = css`\n  display: grid;\n  place-items: center;\n  color: ${palette.gold};\n  opacity: 1;\n  animation: ${animations.fadeIn} ${HEADER_TIMING}s ease-in-out;\n  @media (max-width: 888px) {\n    height: 100vh;\n  }\n`\nconst sloganCss = css`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(10rem, max-content));\n  margin-left: 1.5rem;\n  font-family: \"Audiowide\";\n  font-size: 3rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: .5rem;\n  @media (max-width: 888px) {\n    grid-template-rows: repeat(5, max-content);\n    grid-template-columns: none;\n    grid-gap: .5rem;\n    justify-items: center;\n    .slogan__part--sleep {\n      margin-left: 1.5rem;\n    }\n    .slogan__part--repeat{\n      margin-left: 2rem;\n    }\n  }\n`\nconst sloganPartCss = css`\n  margin-top: 0;\n  height: 5rem;\n  line-height: 5rem;\n  transition: text-shadow ${HEADER_TIMING}s ease-out;\n  .slogan__letter, .slogan__letter--flickering {\n    display: inline-block;\n    width: 3rem;\n    text-align: center;\n  }\n  /* dots */\n  .slogan__letter:last-of-type {\n    text-align: left;\n  }\n  /* first dot */\n  &:first-of-type .slogan__letter:last-of-type {\n    padding-left: .5rem;\n  }\n`\nconst infinity = css`\n  position: relative;\n  opacity: 0;\n  width: 10rem;\n  animation: ${animations.fadeIn} ${HEADER_TIMING}s ease-in-out both;\n  &::after, &::before {\n    content: \"\";\n    position: absolute;\n    top: 15%;\n    left: 43%;\n    width: 1.5rem;\n    height: 1.5rem;\n    border: 1rem solid ${palette.red};\n    border-radius: 0 50% 50% 50%;\n    transform: rotate(-45deg);\n    transition: box-shadow ${HEADER_TIMING}s ease-out;\n  }\n  &::before {\n    top: 15%;\n    left: 3%;\n    border-radius: 50% 50% 50% 0;\n    transform: rotate(-135deg);\n  }\n`\nconst flicker = keyframes`\n  0%, 8.999%, 16%, 31.999%, 47%, 69.999%, 73%, 74.999%, 76%, 83.999%, 85%, 100% {\n    opacity: 1;\n    text-shadow:\n      0 0 .8rem ${palette.gold},\n      0 0 4.4rem ${palette.gold},\n      0 0 6.6rem ${palette.white};\n  }\n  9%, 15.999%, 32%, 46.999%, 70%, 72.999%, 75%, 75.999%, 84%, 84.999% {\n    opacity: .55;\n    text-shadow: none;\n  }\n`\nconst addGlowAndFlickering = css`\n  [class^=slogan__part] {\n    text-shadow:\n      0 0 .8rem ${palette.gold},\n      0 0 4.4rem ${palette.gold},\n      0 0 7.7rem ${palette.white};\n  }\n  .infinity {\n    &::before, &::after {\n      box-shadow:\n        inset 0 0 .5rem ${palette.red},\n        0 0 3.3rem ${palette.red},\n        0 0 7.7rem ${palette.red};\n    }\n  }\n  .slogan__letter--flickering {\n    animation: ${flicker} 15s linear ${HEADER_TIMING}s infinite;\n  }\n`\n\nconst Header = () => {\n  const [slogan, setSlogan] = useState([`††††††`, `∑∑∑∑∑`, ``, `ΩΩΩΩΩΩ`, `ßßßßßßß`])\n  const [isSloganDecoded, setIsSloganDecoded] = useState(false)\n  const { windowWidth } = useWindowSize()\n\n  // Decode slogan.\n  useEffect(() => {\n    if (!isSloganDecoded) {\n      const timerId = setTimeout(() => {\n        const sloganAdjusted = slogan.map((word, i) => (\n          word.split(``).map((char, j) => {\n            const letter = words[i][j]\n            if (char === letter) return char\n\n            const symbolsAndLetter = symbols + letter\n            const pick = symbolsAndLetter[randIdx(symbolsAndLetter)]\n            // Account for the possibility of picking the same symbol twice.\n            // If pick is the same, slip in a letter.\n            if (pick === char) return letter\n\n            return pick\n          }).join(``)\n        ))\n\n        setSlogan(sloganAdjusted)\n      }, 50)\n\n      if (slogan.every((el, i) => el === words[i])) {\n        setIsSloganDecoded(true)\n      }\n\n      return () => clearTimeout(timerId)\n    }\n  }, [isSloganDecoded, slogan])\n\n  return (\n    <header\n      css={header}\n    >\n      <ul\n        css={[\n          sloganCss,\n          isSloganDecoded && (windowWidth >= 1024) && addGlowAndFlickering\n        ]}\n      >\n        {slogan.map((part, partIdx) => {\n          const isInfinity = (partIdx === 2)\n          const word = words[partIdx].toLowerCase().replace(`.`, ``)\n\n          return (\n            <li\n              css={[sloganPartCss, isInfinity && infinity]}\n              className={isInfinity ? \"infinity\" : `slogan__part--${word}`}\n              key={part}\n            >\n              {part.split(``).map((symbol) => {\n                const isFlickeringLetter = (\n                  symbol.toLowerCase() === `d`\n                  || symbol.toLowerCase() === `m`)\n\n                return (\n                  <span\n                    className={\n                      isFlickeringLetter && partIdx === 0\n                        ? `slogan__letter--flickering`\n                        : `slogan__letter`}\n                    key={randInt()}\n                  >\n                    {symbol}\n                  </span>\n                )\n              })}\n            </li>\n          ) })}\n      </ul>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { css, keyframes } from '@emotion/core'\n\nimport Link from './Link'\n\nimport { palette } from '../styles/meta'\n\nconst EDGE_LEN = `25rem`\nconst DETACH_DIST = `20rem`\n\nconst cubeWrapper = css`\n  @media (max-width: 375px) {\n    transform: scale(.55);\n  }\n  @media (min-width: 375px) and (max-width: 525px) {\n    transform: scale(.7);\n  }\n  @media (min-width: 525px) and (max-width: 768px) {\n    transform: scale(.9);\n  }\n`\nconst float = keyframes`\n  from, to {\n    transform: rotate3d(1, 1, 0, 55deg);\n  }\n\n  25% {\n    transform:\n      rotate3d(1.1, 0.95, 0.05, 57deg)\n      scale3d(1.02, 1.02, 1.02)\n      translate3d(10px, 20px, -10px);\n  }\n\n  60% {\n    transform:\n      rotate3d(1, 0.85, 0.1, 55deg)\n      scale3d(1.04, 1.04, 1.04)\n      translate3d(-10px, 20px, 10px);\n  }\n`\nconst cube = css`\n  width: ${EDGE_LEN};\n  height: ${EDGE_LEN};\n  transform-style: preserve-3d;\n  animation: ${float} 15s linear infinite;\n  .cube__front, .cube__back, .cube__left,\n  .cube__right, .cube__bottom, .cube__top {\n    background-color: ${palette.purple};\n    box-shadow: 0 0 10rem 1.5rem ${palette.lightPurple};\n    transition: transform .5s ease-out;\n  }\n  .cube__front {\n    transform: translateZ(calc(${EDGE_LEN} / 2));\n    &:hover ~ .cube__back {\n      box-shadow: 0 0 8rem 3rem ${palette.lightPurple};\n      transform: rotateY(180deg) rotateZ(90deg) translateZ(${DETACH_DIST});\n    }\n  }\n  .cube__back {\n    transform: rotateY(180deg) translateZ(calc(${EDGE_LEN} / 2));\n  }\n  .cube__left {\n    transform: rotateY(270deg) translateZ(calc(${EDGE_LEN} / 2));\n    &:hover ~ .cube__right {\n      box-shadow: 0 0 8rem 3rem ${palette.lightPurple};\n      transform: rotateY(90deg) translateZ(${DETACH_DIST});\n    }\n  }\n  .cube__right {\n    transform: rotateY(90deg) translateZ(calc(${EDGE_LEN} / 2));\n  }\n  .cube__bottom {\n    transform: rotateX(270deg) translateZ(calc(${EDGE_LEN} / 2));\n    &:hover ~ .cube__top {\n      box-shadow: 0 0 8rem 3rem ${palette.lightPurple};\n      transform: rotateX(90deg) rotateZ(-90deg) translateZ(${DETACH_DIST});\n    }\n  }\n  .cube__top {\n    transform: rotateX(90deg) translateZ(calc(${EDGE_LEN} / 2));\n  }\n`\nconst facet = css`\n  position: absolute;\n  height: ${EDGE_LEN};\n  line-height: ${EDGE_LEN};\n  width: ${EDGE_LEN};\n  margin: 0;\n  border: 1px solid ${palette.beige};\n  text-transform: uppercase;\n  font-size: 3.3rem;\n  text-align: center;\n`\nconst link = css`\n  color: ${palette.beige};\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  &:hover {\n    cursor: pointer;\n    background-color: ${palette.teal};\n  }\n`\n\nconst notations = [\n  { text: `About`, to: `/about`, side: `front` },\n  { text: `Get to know me`, side: `back` },\n  { text: `Blog`, to: `/blog`, side: `left` },\n  { text: `Something to read`, side: `right` },\n  { text: `Terminal`, to: `/cmd`, side: `bottom` },\n  { text: `Switch to cmd`, side: `top` },\n]\n\nconst Cube = () => (\n  <div css={cubeWrapper}>\n    <div css={cube}>\n      {notations.map(({ text, to, side }) => (\n        <figure\n          key={Math.random()}\n          className={`cube__${side}`}\n          css={facet}\n        >\n          {to && (\n            <Link\n              to={to}\n              css={link}\n            >\n              {text}\n            </Link>\n          )}\n        </figure>\n      ))}\n    </div>\n  </div>\n)\n\nexport default Cube\n","import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3, Plane, Ray, MathUtils } from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = {\n  type: 'change'\n};\nconst _startEvent = {\n  type: 'start'\n};\nconst _endEvent = {\n  type: 'end'\n};\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos(70 * MathUtils.DEG2RAD);\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    this.object = object;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.05;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    this.zoomToCursor = false;\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    };\n\n    // Touch fingers\n    this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n    this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n    this.stopListenToKeyEvents = function () {\n      this._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function () {\n      const offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const lastTargetPosition = new Vector3();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        // adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n        // we adjust zoom later in these cases\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        // adjust camera position\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object.isPerspectiveCamera) {\n            // move the camera down the pointer ray\n            // this method avoids floating point error\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            // adjust the ortho camera position based on zoom changes\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.');\n            scope.zoomToCursor = false;\n          }\n\n          // handle the placement of the target\n          if (newRadius !== null) {\n            if (this.screenSpacePanning) {\n              // position the orbit target in front of the new camera position\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              // get the ray and translation plane to compute target\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n\n              // if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n              // extremely large values\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object.isOrthographicCamera) {\n          scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n          scope.object.updateProjectionMatrix();\n          zoomChanged = true;\n        }\n        scale = 1;\n        performCursorZoom = false;\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS || lastTargetPosition.distanceToSquared(scope.target) > 0) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          lastTargetPosition.copy(scope.target);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    }();\n    this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerUp);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n        scope._domElementKeyEvents = null;\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    const scope = this;\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001;\n\n    // current position in spherical coordinates\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const dollyDirection = new Vector3();\n    const mouse = new Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n    const panLeft = function () {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n    const panUp = function () {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = function () {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera) {\n        scale /= dollyScale;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera) {\n        scale *= dollyScale;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(object).sub(object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateUp(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(0, scope.keyPanSpeed);\n          }\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateUp(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(0, -scope.keyPanSpeed);\n          }\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateLeft(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(scope.keyPanSpeed, 0);\n          }\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateLeft(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(-scope.keyPanSpeed, 0);\n          }\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      }\n\n      //\n\n      addPointer(event);\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      removePointer(event);\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n\n    //\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerUp);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n\n    // force an update at start\n\n    this.update();\n  }\n}\nexport { OrbitControls };","import * as THREE from 'three'\nimport * as React from 'react'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n// import { GUI } from 'lil-gui'\n\nlet windowWidth = 1024\nlet windowHeight = 1024\nlet devicePixelRatio = 1\n\nif (typeof window !== `undefined`) {\n  // eslint-disable-next-line\n  devicePixelRatio = window.devicePixelRatio\n  windowWidth = window.innerWidth\n  windowHeight = window.innerHeight\n}\n\nconst params = {\n  animate: true,\n  planeY: {\n    constant: 0,\n    negated: false,\n    displayHelper: false\n  },\n}\n\nfunction createPlaneStencilGroup(geometry, plane) {\n  const group = new THREE.Group()\n\n  const baseMaterial = new THREE.MeshBasicMaterial()\n  baseMaterial.depthWrite = false\n  baseMaterial.depthTest = false\n  baseMaterial.colorWrite = false\n  baseMaterial.stencilWrite = true\n  baseMaterial.stencilFunc = THREE.AlwaysStencilFunc\n\n  const backFaceMaterial = baseMaterial.clone()\n  backFaceMaterial.side = THREE.BackSide\n  backFaceMaterial.clippingPlanes = [plane]\n  backFaceMaterial.stencilFail = THREE.IncrementWrapStencilOp\n  backFaceMaterial.stencilZFail = THREE.IncrementWrapStencilOp\n  backFaceMaterial.stencilZPass = THREE.IncrementWrapStencilOp\n  const backFaceMesh = new THREE.Mesh(geometry, backFaceMaterial)\n  group.add(backFaceMesh)\n\n  const frontFaceMaterial = baseMaterial.clone()\n  frontFaceMaterial.side = THREE.FrontSide\n  frontFaceMaterial.clippingPlanes = [plane]\n  frontFaceMaterial.stencilFail = THREE.DecrementWrapStencilOp\n  frontFaceMaterial.stencilZFail = THREE.DecrementWrapStencilOp\n  frontFaceMaterial.stencilZPass = THREE.DecrementWrapStencilOp\n\n  const frontFaceMesh = new THREE.Mesh(geometry, frontFaceMaterial)\n\n  group.add(frontFaceMesh)\n\n  return group\n}\n\nconst clock = new THREE.Clock()\n\nconst scene = new THREE.Scene()\n\nconst camera = new THREE.PerspectiveCamera(36, windowWidth / windowHeight, 1, 25)\ncamera.position.set(0, 5, 0)\n\n// Light\n// const ambientLight = new THREE.AmbientLight(0xffffff, 1.5)\n// scene.add(ambientLight)\n\nconst directLight = new THREE.DirectionalLight(0xffffff, 3)\ndirectLight.position.set(5, 10, 7.5)\nscene.add(directLight)\n\nconst clippingPlane = new THREE.Plane(new THREE.Vector3(0, -1, 0), -0.1)\nconst clippingPlaneHelper = new THREE.PlaneHelper(clippingPlane, 2, 0xffffff)\nclippingPlaneHelper.visible = false\nscene.add(clippingPlaneHelper)\n\nconst geometry = new THREE.TorusKnotGeometry(0.55, 0.15, 220, 60)\nconst object = new THREE.Group()\nscene.add(object)\n\nconst stencilGroup = createPlaneStencilGroup(geometry, clippingPlane)\nobject.add(stencilGroup)\n\nconst planeGeometry = new THREE.PlaneGeometry(8, 8)\nconst planeMaterial = new THREE.MeshStandardMaterial({\n  color: 0x17758a,\n  stencilWrite: true,\n  stencilRef: 0,\n  stencilFunc: THREE.NotEqualStencilFunc,\n  stencilFail: THREE.ReplaceStencilOp,\n  stencilZFail: THREE.ReplaceStencilOp,\n  stencilZPass: THREE.ReplaceStencilOp,\n})\nconst planeObject = new THREE.Mesh(planeGeometry, planeMaterial)\nplaneObject.onAfterRender = (renderer) => {\n  renderer.clearStencil()\n}\nscene.add(planeObject)\n\n// const objectOutsideMaterial = new THREE.MeshPhongMaterial({\n//   color: 0x00ff00,\n//   shininess: 100,\n//   clippingPlanes: [clippingPlane],\n// })\n// const clippedColorFront = new THREE.Mesh(geometry, objectOutsideMaterial)\n// object.add(clippedColorFront)\n\n\n// Renderer\nlet renderer\nif (typeof document !== 'undefined') {\n  renderer = new THREE.WebGLRenderer({ antialias: true })\n  renderer.setPixelRatio(devicePixelRatio)\n  renderer.setSize(windowWidth, windowHeight)\n  renderer.setClearColor(0x0a0010)\n  renderer.localClippingEnabled = true\n\n  document.body.appendChild(renderer.domElement)\n\n  // Controls\n  const controls = new OrbitControls(camera, renderer.domElement)\n  controls.minDistance = 3\n  controls.maxDistance = 20\n  controls.update()\n}\n\nfunction onWindowResize() {\n  camera.aspect = windowWidth / windowHeight\n  camera.updateProjectionMatrix()\n\n  if (renderer) {\n    renderer.setSize(windowWidth, windowHeight)\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('resize', onWindowResize)\n}\n\n// GUI\n// const gui = new GUI()\n// gui.add(params, 'animate')\n// const planeY = gui.addFolder('planeY')\n// planeY.add(params.planeY, 'displayHelper').onChange(v => clippingPlaneHelper.visible = v)\n// planeY.add(params.planeY, 'constant').min(- 1).max(1).onChange(d => clippingPlane.constant = d)\n// planeY.add(params.planeY, 'negated').onChange(() => {\n//   clippingPlane.negate()\n//   params.planeY.constant = clippingPlane.constant\n// })\n\nfunction animate() {\n  const delta = clock.getDelta()\n  const elapsedTime = clock.getElapsedTime()\n\n  requestAnimationFrame(animate)\n\n  if (params.animate) {\n    object.rotation.x += delta * 0.5\n    object.rotation.y += delta * 0.2\n    const positionXAmplitude = Math.sin(elapsedTime * 0.05) * 1.75\n    object.position.x = positionXAmplitude\n    object.position.y = Math.cos(elapsedTime * 0.45)\n  }\n\n  clippingPlane.coplanarPoint(planeObject.position)\n  planeObject.lookAt(\n    planeObject.position.x - clippingPlane.normal.x,\n    planeObject.position.y - clippingPlane.normal.y,\n    planeObject.position.z - clippingPlane.normal.z,\n  )\n\n  if (renderer) {\n    renderer.render(scene, camera)\n  }\n}\n\nexport default function FloatingBlobsBackground() {\n  React.useEffect(() => {\n    if (renderer && renderer.domElement.style.display === 'none') {\n      renderer.domElement.style.display = 'block'\n    }\n\n    animate()\n\n    return () => {\n      if (renderer) {\n        renderer.domElement.style.display = 'none'\n      }\n    }\n  }, [])\n\n  return null\n}\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport posthog from 'posthog-js'\n\nimport Header from '../components/Header'\nimport SEO from '../components/seo'\nimport Cube from '../components/Cube'\nimport FloatingBlobsBackground from '../components/FloatingBlobsBackground'\n\nconst pageContainer = css`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows: 1fr 7fr;\n  @media (max-width: 888px) {\n    display: block;\n  }\n`\nconst cubeContainer = css`\n  display: grid;\n  place-items: center;\n  overflow-y: hidden;\n  @media (max-width: 888px) {\n    height: 100vh;\n  }\n`\n\nif (typeof window !== 'undefined') {\n  posthog.init('phc_4wjIUZsHhbZJNUjHPTBTd5inK2ykTorxoYReXN2VGmy', { api_host: 'https://app.posthog.com' })\n}\n\nconst IndexPage = () => (\n  <>\n    <SEO title=\"Root\" />\n    <div css={pageContainer}>\n      <Header />\n      <main css={cubeContainer}>\n        <Cube />\n      </main>\n      <FloatingBlobsBackground />\n    </div>\n  </>\n)\n\nexport default IndexPage\n","const randIdx = ({ length }) => Math.floor(Math.random() * length)\n\nconst randInt = () => Math.random() * 100000\n\nexport { randIdx, randInt }\n","import { useState, useEffect } from 'react'\n\nlet defaultHeight\nlet defaultWidth\n\nif (typeof window !== `undefined`) {\n  defaultHeight = window.innerHeight\n  defaultWidth = window.innerWidth\n}\n\nconst useWindowSize = () => {\n  const [dimensions, setDimensions] = useState({\n    windowHeight: defaultHeight,\n    windowWidth: defaultWidth,\n  })\n\n  useEffect(() => {\n    const handler = () => setDimensions({\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n    })\n\n    window.addEventListener(`resize`, handler)\n    return () => window.removeEventListener(`resize`, handler)\n  }, [])\n\n  return dimensions\n}\n\nexport default useWindowSize\n"],"names":["words","header","css","palette","gold","animations","fadeIn","sloganCss","sloganPartCss","infinity","red","flicker","keyframes","white","addGlowAndFlickering","Header","slogan","setSlogan","useState","isSloganDecoded","setIsSloganDecoded","windowWidth","useWindowSize","useEffect","timerId","setTimeout","sloganAdjusted","map","word","i","split","char","j","letter","symbolsAndLetter","pick","randIdx","join","every","el","clearTimeout","___EmotionJSX","part","partIdx","isInfinity","toLowerCase","replace","className","key","symbol","isFlickeringLetter","randInt","EDGE_LEN","DETACH_DIST","cubeWrapper","float","cube","purple","lightPurple","facet","beige","link","teal","notations","text","to","side","Cube","_ref","Math","random","Link","_changeEvent","type","_startEvent","_endEvent","_ray","_plane","TILT_LIMIT","cos","DEG2RAD","OrbitControls","constructor","object","domElement","super","this","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","lastTargetPosition","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","addScaledVector","panOffset","add","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","newRadius","isPerspectiveCamera","prevRadius","length","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","x","y","unproject","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","EPS","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","updateMouseParameters","event","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","handleMouseDownRotate","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","splice","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","undefined","pointer","passive","windowHeight","devicePixelRatio","window","innerWidth","innerHeight","params","clock","THREE","scene","camera","directLight","clippingPlane","clippingPlaneHelper","visible","geometry","stencilGroup","plane","group","baseMaterial","depthWrite","depthTest","colorWrite","stencilWrite","stencilFunc","backFaceMaterial","clippingPlanes","stencilFail","stencilZFail","stencilZPass","backFaceMesh","frontFaceMaterial","frontFaceMesh","createPlaneStencilGroup","planeGeometry","planeMaterial","color","stencilRef","planeObject","renderer","onAfterRender","clearStencil","document","antialias","setPixelRatio","setSize","setClearColor","localClippingEnabled","body","appendChild","controls","animate","delta","getDelta","elapsedTime","getElapsedTime","requestAnimationFrame","rotation","positionXAmplitude","sin","coplanarPoint","normal","z","render","FloatingBlobsBackground","React","display","aspect","pageContainer","cubeContainer","posthog","init","api_host","IndexPage","SEO","title","floor","defaultHeight","defaultWidth","dimensions","setDimensions","handler"],"sourceRoot":""}