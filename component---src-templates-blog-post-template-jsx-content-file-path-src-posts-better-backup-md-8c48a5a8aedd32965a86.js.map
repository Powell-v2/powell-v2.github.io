{"version":3,"file":"component---src-templates-blog-post-template-jsx-content-file-path-src-posts-better-backup-md-8c48a5a8aedd32965a86.js","mappings":"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","sources":["webpack://Dream.Code.Sleep.Repeat././src/components/Menu/MenuButton.jsx","webpack://Dream.Code.Sleep.Repeat././src/components/Menu/MenuButton.module.css","webpack://Dream.Code.Sleep.Repeat././src/components/Menu/Overlay.jsx","webpack://Dream.Code.Sleep.Repeat././src/components/Menu/Overlay.module.css","webpack://Dream.Code.Sleep.Repeat././src/components/custom_hooks/useLockBodyScroll.js","webpack://Dream.Code.Sleep.Repeat././src/components/Menu/MenuBody.jsx","webpack://Dream.Code.Sleep.Repeat././src/components/Menu/MenuBody.module.css","webpack://Dream.Code.Sleep.Repeat././src/components/Menu/index.jsx","webpack://Dream.Code.Sleep.Repeat././src/posts/better_backup.md","webpack://Dream.Code.Sleep.Repeat././src/templates/BlogPostTemplate.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { css } from '@emotion/core'\n\nimport * as componentStyles from './MenuButton.module.css'\nimport { palette } from '../../styles/meta'\n\nconst button = css`\n  width: 5rem;\n  height: 5rem;\n  background-color: transparent;\n  font-size: 1.5rem;\n  cursor: pointer;\n  outline: none;\n`\nconst burgerOnHover = css`\n  &:hover > span {\n    &::before {\n      transform: scaleX(.95);\n    }\n    &::after {\n      transform: scaleX(.95);\n    }\n    & span {\n      transform: scaleX(.6);\n    }\n  }\n`\nconst burgerCss = css`\n  display: block;\n  padding: 0 .9rem;\n  &::before, &::after {\n    content: \"\";\n    display: block;\n    height: calc(3rem / 6);\n    background-color: ${palette.beige};\n    transition: all 175ms ease-in-out;\n  }\n  &::before, &::after {\n    transform-origin: center;\n    transform: scaleX(.55);\n  }\n  & span {\n    display: block;\n    height: calc(3rem / 6);\n    margin: calc(3rem / 6) 0;\n    background-color: ${palette.beige};\n    transform-origin: center;\n    transform: scaleX(1);\n    transition: all 175ms ease-in-out;\n  }\n`\nconst crossCss = css`\n  &::before, &::after {\n    transform-origin: center;\n  }\n  &::before {\n    transform:\n      scaleX(1)\n      translateY(1rem)\n      rotate(-45deg);\n  }\n  &::after {\n    transform:\n      scaleX(1)\n      translateY(-1rem)\n      rotate(45deg);\n  }\n  & span {\n    transform: scaleX(0);\n  }\n`\n\nconst MenuButton = ({ isOpen, setIsOpen }) => (\n  <div className={componentStyles.buttonWrapper}>\n    <button\n      type=\"button\"\n      aria-label=\"Menu\"\n      css={[button, !isOpen && burgerOnHover]}\n      onClick={() => setIsOpen((prevState) => !prevState)}\n      onKeyDown={(e) => {\n        // Enter and Space, respectively\n        if (e.keyCode === 13 || e.keyCode === 32) {\n          setIsOpen(true)\n        }\n      }}\n    >\n      <span css={[burgerCss, isOpen && crossCss]}>\n        <span />\n      </span>\n    </button>\n  </div>\n)\n\nMenuButton.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  setIsOpen: PropTypes.func.isRequired,\n}\n\nexport default MenuButton\n","// extracted by mini-css-extract-plugin\nexport var buttonWrapper = \"MenuButton-module--buttonWrapper--40c36\";","import React from 'react'\n\nimport * as componentStyles from './Overlay.module.css'\n\nconst Overlay = () => (\n  <div className={componentStyles.overlay} />\n)\n\nexport default Overlay\n","// extracted by mini-css-extract-plugin\nexport var overlay = \"Overlay-module--overlay--c2b7c\";","import { useLayoutEffect } from 'react'\n\nexport function useLockBodyScroll() {\n  useLayoutEffect(() => {\n    // Get original body overflow\n    const originalStyle = window.getComputedStyle(document.body).overflow\n    // Prevent scrolling on mount\n    document.body.style.overflow = 'hidden'\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      document.body.style.overflow = originalStyle\n    }\n  }, [])\n}\n\nexport default useLockBodyScroll\n\n// Usage\n\n// function Modal({ title, content, onClose }){\n//   // Call hook to lock body scroll\n//   useLockBodyScroll();\n\n//   return (\n//     <div className=\"modal-overlay\" onClick={onClose}>\n//       <div className=\"modal\">\n//         <h2>{title}</h2>\n//         <p>{content}</p>\n//       </div>\n//     </div>\n//   );\n// }\n","import React from 'react'\n\nimport Link from '../Link'\nimport { useLockBodyScroll } from \"../custom_hooks/useLockBodyScroll\"\nimport ContactLinks from '../ContactLinks'\n\nimport * as componentStyles from './MenuBody.module.css'\n\nconst pages = [\n  {\n    name: `Home`,\n    to: `/`\n  },\n  {\n    name: `About`,\n    to: `/about`\n  },\n  {\n    name: `Blog`,\n    to: `/blog`\n  },\n  {\n    name: `Terminal`,\n    to: `/cmd`\n  },\n]\n\nconst MenuBody = () => {\n  useLockBodyScroll()\n\n  return (\n    <section className={componentStyles.menuContainer}>\n      <ul className={componentStyles.pageLinksListWrapper}>\n        {pages.map(({ name, to }) => (\n          <li\n            key={name}\n            className={`${componentStyles.pageLinkItem} ${componentStyles.glowOnHover}`}\n          >\n            <Link\n              to={to}\n            >\n              {name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <ul className={componentStyles.contactSection}>\n        <ContactLinks\n          iconsOnly\n        />\n      </ul>\n    </section>\n  )\n}\n\nexport default MenuBody\n","// extracted by mini-css-extract-plugin\nexport var contactSection = \"MenuBody-module--contactSection--ac135\";\nexport var fadeInFromBottom = \"MenuBody-module--fadeInFromBottom--685c8\";\nexport var fadeInFromTop = \"MenuBody-module--fadeInFromTop--e7322\";\nexport var glow = \"MenuBody-module--glow--c20ac\";\nexport var glowOnHover = \"MenuBody-module--glowOnHover--c19ec\";\nexport var menuContainer = \"MenuBody-module--menuContainer--138bc\";\nexport var pageLinkItem = \"MenuBody-module--pageLinkItem--4c5ec\";\nexport var pageLinksListWrapper = \"MenuBody-module--pageLinksListWrapper--2c5a6\";","import React, { useState, useEffect, useContext } from 'react'\nimport PropTypes from 'prop-types'\n\nimport AppContext from '../../context/AppContext'\n\nimport MenuButton from './MenuButton'\nimport Overlay from './Overlay'\nimport MenuBody from './MenuBody'\n\nconst Menu = ({ setIsMenuOpen }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { toggleMenuState } = useContext(AppContext)\n  toggleMenuState(isOpen)\n\n  useEffect(() => {\n    if (setIsMenuOpen) setIsMenuOpen(isOpen)\n  }, [isOpen, setIsMenuOpen])\n\n  useEffect(() => {\n    const listener = (e) => {\n      // toggle on Escape\n      if (e.keyCode === 27) setIsOpen((prevState) => !prevState)\n    }\n\n    window.addEventListener('keydown', listener)\n    return () => window.removeEventListener('keydown', listener)\n  }, [])\n\n  return (\n    <>\n      <MenuButton\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n      />\n      {isOpen && (\n        <>\n          <Overlay />\n          <MenuBody />\n        </>\n      )}\n    </>\n  )\n}\n\nMenu.propTypes = {\n  setIsMenuOpen: PropTypes.func,\n}\n\nMenu.defaultProps = {\n  setIsMenuOpen: null,\n}\n\nexport default Menu\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Things do not always go as planned - future has a tendency to surprise in many unexpected ways. While accounting for every possible outcome is simply beyond human abilities, it's no reason to skip on planning and let things slide. Having a fallback option is vital as it eliminates fear of failure which severely bogs down and, in worst cases, kills aspirations.\"), \"\\n\", React.createElement(_components.p, null, \"On the other hand, conceiving an alternative might stifle your performance and hinder your potential. There is a safety net out there, and you subconsciously pull your sleeves down. This might indeed prevent you to execute at the highest level of your abilities in order to achieve set goals. While this sounds reasonable, the truth is that not everyone can transform their fear of failure into motivation - and fear can be absolutely paralysing when stakes are high enough. Moreover, persisting against all odds is rather an exception and, in fairness, not the most efficient approach considering the pace of change nowadays. No doubt you've got to stick to your guns, but at the same time you want to be fluid, able to adapt and evolve along with your environment.\"), \"\\n\", React.createElement(_components.p, null, \"I think you don't have to mutually exclude these approaches. Instead, pick the best parts and fruitfully combine them. You can still commit completely to your initial objective as if there was no tomorrow even with few fallback options already schemed. It requires sort of a mind trick, though. You've got to stash these backups away and put a lid on them. Carry through with all your energy focused on accomplishing target goals. At the same time, be mindful and perform reality checks. When you realize there is a high probability that it won't pan out, switch to the next plan in chain and indulge in it with the same rigor. Remember - there is always a risk of falling victim to sunken cost fallacy instead of being smart about your next move.\"), \"\\n\", React.createElement(_components.p, null, \"Speaking of plan composition, at the very least you'll need plan B. It might not\\nbe as ambitious as plan A, however keep these two as close as possible in scope.\\nPlan Z won't hurt either. That's your insurance, a course of action when everything falls through. Force majeure is real and you'd better be ready when the world comes crashing down.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/pye/personal_website_v3/powell-v2.github.io/src/posts/better_backup.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport SEO from '../components/seo';\nimport Menu from '../components/Menu';\nimport Post from '../components/Post';\nconst BlogPostTemplate = ({data: {mdx}, children, pageContext}) => {\n  const {previousPost, nextPost} = pageContext;\n  const {frontmatter} = mdx;\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: frontmatter.title\n  }), React.createElement(Menu), React.createElement(Post, {\n    title: frontmatter.title,\n    date: frontmatter.date,\n    previousPost: nextPost,\n    nextPost: previousPost\n  }, children));\n};\nBlogPostTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    id: PropTypes.string,\n    previousPost: PropTypes.shape({\n      path: PropTypes.string,\n      title: PropTypes.string\n    }),\n    nextPost: PropTypes.shape({\n      path: PropTypes.string,\n      title: PropTypes.string\n    })\n  }).isRequired,\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      id: PropTypes.string,\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        date: PropTypes.string\n      })\n    })\n  }).isRequired,\n  children: PropTypes.node.isRequired\n};\nexport const blogPostQuery = graphql`\n  query BlogPostQuery($id: String!) {\n    mdx(\n      id: { eq: $id }\n    ) {\n      id\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["button","css","burgerOnHover","burgerCss","palette","beige","crossCss","_ref","isOpen","setIsOpen","___EmotionJSX","className","type","onClick","prevState","onKeyDown","e","keyCode","Overlay","useLockBodyScroll","useLayoutEffect","originalStyle","window","getComputedStyle","document","body","overflow","style","pages","name","to","MenuBody","map","key","Link","ContactLinks","iconsOnly","Menu","setIsMenuOpen","useState","toggleMenuState","useContext","AppContext","useEffect","listener","addEventListener","removeEventListener","React","MenuButton","defaultProps","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","wrapper","MDXLayout","BlogPostTemplate","data","mdx","children","pageContext","previousPost","nextPost","frontmatter","SEO","title","Post","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}